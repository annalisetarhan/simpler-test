openapi: 3.0.0
info:
  title: Product API
  version: 1.0.0
  description: API for managing products

servers:
  - url: http://localhost:8080/api/v1

paths:
  /products:
    post:
      summary: Create a new product
      description: Add a new product to the database
      operationId: createProduct
      requestBody:
        description: Product creation data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input
        '409':
          description: Product with the same SKU already exists
        '500':
          description: Server error

    get:
      summary: Get paginated list of products
      description: Retrieve a paginated list of products. If the page parameter is included, the size parameter must also be specified.
      operationId: getProducts
      parameters:
        - name: page
          in: query
          description: Page number for pagination (starts from 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: Number of products to retrieve per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: A paginated list of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    description: List of products
                    items:
                      $ref: '#/components/schemas/Product'
                  total_count:
                    type: integer
                    format: int64
                    description: Total number of products available
                  page:
                    type: integer
                    format: int32
                    description: The current page number
                  size:
                    type: integer
                    format: int32
                    description: The number of products per page
                  total_pages:
                    type: integer
                    format: int32
                    description: Total number of pages available based on the total count and size
        '400':
          description: Invalid request parameters
        '422':
          description: Page number out of range
        '500':
          description: Server error

  /products/{id}:
    get:
      summary: Get a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the product to retrieve
      responses:
        '200':
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '500':
          description: Server error

    patch:
      summary: Update a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the product to update
      requestBody:
        description: Product data to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateRequest'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input
        '404':
          description: Product not found
        '409':
          description: Product with the same SKU already exists
        '500':
          description: Server error

    delete:
      summary: Delete a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the product to delete
      responses:
        '204':
          description: Product deleted successfully
        '400':
          description: Invalid product ID
        '404':
          description: Product not found
        '500':
          description: Server error

components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
        - price
        - quantity
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the product
        name:
          type: string
          description: Name of the product
        description:
          type: string
          description: Description of the product
        sku:
          type: string
          description: SKU (Stock Keeping Unit) for the product
        price:
          type: number
          format: float
          description: Price of the product
        quantity:
          type: integer
          description: Available quantity in stock
        category:
          type: string
          description: Product category
        created_at:
          type: string
          format: date-time
          description: Timestamp when the product was created
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the product was last updated
        deleted_at:
          type: string
          format: date-time
          description: Timestamp when the product was deleted, if applicable
          nullable: true

    ProductCreateRequest:
      type: object
      required:
        - name
        - price
        - quantity
      properties:
        name:
          type: string
          description: Name of the product
        description:
          type: string
          description: Description of the product
        sku:
          type: string
          description: SKU (Stock Keeping Unit) for the product
        price:
          type: number
          format: float
          description: Price of the product
        quantity:
          type: integer
          description: Available quantity in stock
        category:
          type: string
          description: Product category

    ProductUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the product
        description:
          type: string
          description: Description of the product
        sku:
          type: string
          description: SKU (Stock Keeping Unit) for the product
        price:
          type: number
          format: float
          description: Price of the product
        quantity:
          type: integer
          description: Available quantity in stock
        category:
          type: string
          description: Product category
